pipeline {
  agent any
  environment {
    IMAGE_NAME = "yourdockerhubuser/wog-scores:${env.BUILD_NUMBER}"
    CONTAINER_NAME = "wog-scores-ci"
  }

  stages {
    stage('Checkout') {
      steps { checkout scm }
    }

    stage('Build') {
      steps {
        sh "docker build -t ${IMAGE_NAME} ."
      }
    }

    stage('Run') {
      steps {
        sh """
          docker run -d --rm --name ${CONTAINER_NAME} \
            -p 8777:8777 \
            -v \$PWD/app/Scores.txt:/Scores.txt \
            ${IMAGE_NAME}
        """
        // Give the server a moment to boot
        sh "sleep 5"
      }
    }

    stage('Test') {
      steps {
        script {
          def status = sh(script: "docker exec ${CONTAINER_NAME} python /e2e.py --url http://localhost:8777", returnStatus: true)
          if (status != 0) {
            error "E2E tests failed!"
          }
        }
      }
    }

    stage('Finalize') {
      steps {
        sh "docker stop ${CONTAINER_NAME}"
        sh "docker push ${IMAGE_NAME}"
      }
    }
  }

  post {
    always { cleanWs() }
  }
}
